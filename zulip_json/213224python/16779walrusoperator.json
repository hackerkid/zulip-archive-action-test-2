[
    {
        "content": "<p>Since the topic of new features popped up in the context of f-strings - python 3.8 added the walrus operator <a href=\"https://www.python.org/dev/peps/pep-0572/\" target=\"_blank\" title=\"https://www.python.org/dev/peps/pep-0572/\">https://www.python.org/dev/peps/pep-0572/</a> allowing a nice way of doing assignment in <code>if</code> statements for example:</p>\n<div class=\"codehilite\"><pre><span></span>if (result := some_function()) is not None:\n  # do stuff with result)\n</pre></div>\n\n\n<p>instead of</p>\n<div class=\"codehilite\"><pre><span></span>result = some_function()\nif result is not None:\n</pre></div>\n\n\n<p>Is this something you think you will like to use?</p>",
        "id": 184165892,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1577189308
    },
    {
        "content": "<p>I think I would find uses for the walrus operator, although for the example that you give, I prefer the old style.  It's been a bit since I read the PEP, but I found it convincing.  Some of the examples they gave resonated with me, for sure.</p>",
        "id": 184166324,
        "sender_full_name": "Steve Howell",
        "timestamp": 1577190013
    },
    {
        "content": "<p>Yeah I'm not a fan of my example, the ones I liked the most from the pep were read a file in chunk in a  <code>while</code>  loop and usage in a list:</p>\n<div class=\"codehilite\"><pre><span></span># A loop that can&#39;t be trivially rewritten using 2-arg iter()\nwhile chunk := file.read(8192):\n   process(chunk)\n</pre></div>\n\n\n<p>and</p>\n<div class=\"codehilite\"><pre><span></span># Reuse a value that&#39;s expensive to compute\n[y := f(x), y**2, y**3]\n</pre></div>",
        "id": 184167188,
        "sender_full_name": "Mateusz Mandera",
        "timestamp": 1577191190
    },
    {
        "content": "<p>Yeah, I feel like I've run into variations of both of those over the course of the years.  The latter one (reuse values) has been less common for me, but when it's come up in the past, it's always been annoying, and I'd spend too much time deciding whether I wanted to sacrifice code readability to avoid re-computes.</p>",
        "id": 184169811,
        "sender_full_name": "Steve Howell",
        "timestamp": 1577194359
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"255098\">@Mateusz Mandera</span> Those cases look like the most interesting to me too, so far at least</p>",
        "id": 184293963,
        "sender_full_name": "Neil Pilgrim",
        "timestamp": 1577412347
    }
]