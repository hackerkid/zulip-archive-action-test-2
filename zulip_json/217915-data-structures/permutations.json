[
    {
        "content": "<p>Here's a little programming puzzle.  Given a permutation of the first N integers, find the moves needed to put the list back in place.</p>",
        "id": 186227741,
        "sender_full_name": "Steve Howell",
        "timestamp": 1579641046
    },
    {
        "content": "<p>So for the list [0, 5, 1, 2, 3, 4], the only move you need is <strong>from</strong>: 1, <strong>to</strong>: 5.  In other words, put the 5 from position 1 into position 5.</p>",
        "id": 186227840,
        "sender_full_name": "Steve Howell",
        "timestamp": 1579641105
    },
    {
        "content": "<p>For lists that are in worse order, you'll require more moves, so, for example, [3, 2, 1, 0] requires moves from-0-to-3 and from-1-to-2.</p>",
        "id": 186228130,
        "sender_full_name": "Steve Howell",
        "timestamp": 1579641186
    },
    {
        "content": "<p>Finally, your moves should account for previous moves, so for [3, 2, 1, 0], you might move the 0 to the front of the list, and of course that will change the positions of [2, 1, 0] and affect their subsequent from/to offsets.</p>",
        "id": 186228323,
        "sender_full_name": "Steve Howell",
        "timestamp": 1579641284
    },
    {
        "content": "<p>The simple solution to this problem is to just take any decent sort algorithm, perform it on the list, and record the moves.</p>",
        "id": 186228410,
        "sender_full_name": "Steve Howell",
        "timestamp": 1579641323
    },
    {
        "content": "<p>But suppose you think that the list is generally gonna be mostly sorted.  How can you take advantage of that?   And when do you bail out of the sort?</p>",
        "id": 186228446,
        "sender_full_name": "Steve Howell",
        "timestamp": 1579641356
    },
    {
        "content": "<p>So sorry to mention @all for the above puzzle, but I'm trying to generate a bit of conversation on this site.  Thanks again for signing up!</p>",
        "id": 186228525,
        "sender_full_name": "Steve Howell",
        "timestamp": 1579641390
    },
    {
        "content": "<p>What are you defining as a \"move\"? Saying that you can solve <code>[0, 5, 1, 2, 3, 4]</code> in one move seems to imply that a \"move\" is a single-step rotation of some contiguous subsequence, but you need at least three moves to solve <code>[3, 2, 1, 0]</code> that way.</p>",
        "id": 186232415,
        "sender_full_name": "Ray Kraesig",
        "timestamp": 1579643840
    },
    {
        "content": "<p>A move from 2 to 6 moves item 2 to the 6th position and pushes 3, 4, 5, 6 back.  (So, yeah, kinda like a rotation.)</p>",
        "id": 186232571,
        "sender_full_name": "Steve Howell",
        "timestamp": 1579643939
    },
    {
        "content": "<p>Oops, you're right about 3,2,1,0.</p>",
        "id": 186232636,
        "sender_full_name": "Steve Howell",
        "timestamp": 1579643991
    },
    {
        "content": "<p>One solution for 3210 is 3210 -&gt; 0321 -&gt; 0132 -&gt; 0123.</p>",
        "id": 186232741,
        "sender_full_name": "Steve Howell",
        "timestamp": 1579644033
    },
    {
        "content": "<p>Also, I'm making the constraint that you can only move one element at a time.  In other words, you can't move a big chunk at a time.</p>",
        "id": 186232921,
        "sender_full_name": "Steve Howell",
        "timestamp": 1579644176
    }
]